name: Qv2ray build matrix - Qt6

on:
  push:
    branches-ignore:
      - l10n_dev
  release:
    types: [prereleased]

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')"
          echo "message=\"$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')\"" >> $GITHUB_ENV
  build:
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, '!QT6') }}
    strategy:
      matrix:
        ui_type: [QWidget, QML]
        platform: [macos-latest]
        build_type: [RelWithDebInfo, Release]
        qt_version: [6.0.0]
        include:
          - platform: windows-latest
            qtarch: win64_msvc2019_64
      fail-fast: false

    runs-on: ${{ matrix.platform }}
    env:
      _QV2RAY_BUILD_INFO_: "Qv2ray built from Github Action"
      _QV2RAY_BUILD_EXTRA_INFO_: "qt${{ matrix.qt_version }}-${{ github.sha }}-ci.${{ matrix.platform }}"
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # =========================================================================================================
          # =========================================================================================================
    
      # --------------------------------------------------------
      - name: macOS - ${{ matrix.qt_version }} - Build preparation - Install Packages
        if: matrix.platform == 'macos-latest'
        run: |
          brew install protobuf grpc ninja pkg-config openssl
          git clone https://github.com/Qv2ray/macdeployqt-patched
          cd macdeployqt-patched
          mkdir build; cd build;
          cmake .. -DCMAKE_BUILD_TYPE=Release; cmake --build .
          cp -v ./macdeployqt ${Qt6_DIR}/bin/macdeployqt
      # --------------------------------------------------------
         # ========================================================================================================= Generate MakeFile and Build

      - uses: actions/setup-node@v1
        if: matrix.platform == 'macos-latest'
        with:
          node-version: "12.x"
      - run: npm install -g appdmg
        if: matrix.platform == 'macos-latest'
      - name: macOS - ${{ matrix.qt_version }} - Generate Dependencies and Build
        shell: bash
        if: matrix.platform == 'macos-latest'
        env:
          PKG_CONFIG_PATH: /usr/local/opt/openssl@1.1/lib/pkgconfig
        run: |
          mkdir build
          cd build
          cmake .. -GNinja \
            -DCMAKE_INSTALL_PREFIX=installed \
            -DQV2RAY_UI_TYPE=${{ matrix.ui_type }} \
            -DQV2RAY_QT6=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.13 \
            -DDS_STORE_SCRIPT=ON \
            -DQV2RAY_DEFAULT_VASSETS_PATH=/usr/local/opt/v2ray/share/v2ray \
            -DQV2RAY_DEFAULT_VCORE_PATH=/usr/local/opt/v2ray/bin/v2ray
          cmake --build . --parallel $(sysctl -n hw.logicalcpu)
          sudo cmake --install .
          appdmg ../assets/package_dmg.json ../Qv2ray.dmg
      # --------------------------------------------------------
          # --------------------------------------------------------
           # ========================================================================================================= Deployments
           # --------------------------------------------------------
      - name: macOS - ${{ matrix.qt_version }} - Uploading Artifact
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray-${{ github.sha }}.macOS-${{ matrix.ui_type }}.qt${{ matrix.qt_version }}-${{ matrix.build_type }}.dmg
          path: Qv2ray.dmg
      - name: macOS - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'macos-latest' && matrix.ui_type == 'QWidget' && matrix.qt_version == '6.0.0' && matrix.build_type == 'Release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Qv2ray.dmg
          asset_name: Qv2ray.${{ steps.get_version.outputs.VERSION }}.Qt6.macOS.dmg
          tag: ${{ github.ref }}
          overwrite: true

    
